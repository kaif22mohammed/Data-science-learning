{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyM1epzlisjwgmgdeYNXj5Hn",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kaif22mohammed/Data-science-learning/blob/main/stats_Descriptive\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "1MROhXtpGUtQ"
      },
      "outputs": [],
      "source": [
        "#1\n",
        "\n",
        "import pandas as ps"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "commercials = ps.Series([2, 5, 1, 3, 4, 1, 5, 3, 4, 2])\n",
        "sales = ps.Series([50, 57, 41, 54, 54, 38, 63, 48, 59, 46])"
      ],
      "metadata": {
        "id": "XpSk-jVgG0Ys"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = ps.DataFrame(columns =[\"commercials\",\"sales\"])\n",
        "df[\"commercials\"] = commercials\n",
        "df[\"sales\"] = sales"
      ],
      "metadata": {
        "id": "1nsy4dvKIGgW"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "xiVgRKIlJM5X",
        "outputId": "3f89f2b3-f2d0-43a0-d9a4-ae55328ca4cf"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   commercials  sales\n",
              "0            2     50\n",
              "1            5     57\n",
              "2            1     41\n",
              "3            3     54\n",
              "4            4     54\n",
              "5            1     38\n",
              "6            5     63\n",
              "7            3     48\n",
              "8            4     59\n",
              "9            2     46"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-265618d5-8b03-4b79-bac1-4b0614608cb1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>commercials</th>\n",
              "      <th>sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>5</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3</td>\n",
              "      <td>48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>4</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2</td>\n",
              "      <td>46</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-265618d5-8b03-4b79-bac1-4b0614608cb1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-265618d5-8b03-4b79-bac1-4b0614608cb1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-265618d5-8b03-4b79-bac1-4b0614608cb1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot.scatter(\"commercials\",\"sales\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "JmD2mBr9Z78X",
        "outputId": "af7067b9-c1ac-49c6-dc7e-f45f27ff750a"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4f7e67990>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.cov().loc[\"commercials\",\"sales\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yZVXEhj4bTGh",
        "outputId": "125782ca-cd7f-4d37-d0ec-4f160756b04d"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11.0"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr().loc[\"commercials\",\"sales\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BUR-ekxcbd6F",
        "outputId": "d6fd7057-6b71-4979-fc58-6816b232e632"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.930490580741179"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#2\n",
        "kilo = ps.DataFrame([[2, 50000], [5, 57000], [1, 41000], [3, 54000], [4, 54000], \n",
        "                    [1, 38000], [5, 63000], [3, 48000], [4, 59000], [2, 46000]],columns=(\"commercials\",\"sales\"))"
      ],
      "metadata": {
        "id": "eaSGwKbQehhm"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "kilo.plot.scatter(\"commercials\",\"sales\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "Pl6_-pOUgxNu",
        "outputId": "d571f544-4e3d-4f84-ec6a-5ba1632e60b8"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4f7893dd0>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilo.cov().loc[\"commercials\",\"sales\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tPe1kaN3g84y",
        "outputId": "968c740c-7e95-486c-fd3c-b09c85597c9f"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11000.0"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilo.corr().loc[\"commercials\",\"sales\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RqUeu-X2hHU-",
        "outputId": "2c3527cc-a424-4a5a-ec9b-213c53aec94d"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9304905807411789"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#3\n",
        "import numpy as np\n",
        "import matplotlib as mp"
      ],
      "metadata": {
        "id": "o1cWEGbJ3-ek"
      },
      "execution_count": 69,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I9IQnpCo08lM",
        "outputId": "a19b29a8-8a5c-4e79-d0a8-e834cd9d1778"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "path = (\"/content/drive/MyDrive/Colab Notebooks/descrip_stats/Descrip_Stats_problem_data_v1.xlsx\")\n",
        "df2 = open(path)"
      ],
      "metadata": {
        "id": "STgc4Uao1mPK"
      },
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df2 = ps.read_excel(path,sheet_name='Problem3')\n",
        "df2.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XZmTOIgD2eoH",
        "outputId": "793295ad-656f-4ba3-8d90-cdea347984f9"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "State    object\n",
              "Sales     int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 708
        },
        "id": "LXOq_ffE3MeJ",
        "outputId": "90813668-6954-44bd-d326-c754c6321c8f"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             State  Sales\n",
              "0         Arizona    8408\n",
              "1      California    1374\n",
              "2        Colorado    1872\n",
              "3         Florida    8879\n",
              "4         Georgia    2459\n",
              "5          Kansas   11413\n",
              "6        Kentucky     608\n",
              "7             Ohio  14138\n",
              "8        Maryland    6452\n",
              "9   Massachusetts    1850\n",
              "10       Michigan    2818\n",
              "11    Mississippi    1356\n",
              "12       Missouri   10498\n",
              "13     New Jersey    7478\n",
              "14      Louisiana    4019\n",
              "15       Oklahoma    4341\n",
              "16      Tennessee     739\n",
              "17          Texas    2127\n",
              "18       Virginia    3653\n",
              "19     Washington    5794\n",
              "20  West Virginia    8305"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2902a60a-fac4-4298-8c32-7b929fda8698\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>8408</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>California</td>\n",
              "      <td>1374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>1872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Florida</td>\n",
              "      <td>8879</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>2459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>11413</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>608</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>14138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>6452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>1850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>2818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>1356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>10498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7478</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>4019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>4341</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Texas</td>\n",
              "      <td>2127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>3653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Washington</td>\n",
              "      <td>5794</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>8305</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2902a60a-fac4-4298-8c32-7b929fda8698')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2902a60a-fac4-4298-8c32-7b929fda8698 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2902a60a-fac4-4298-8c32-7b929fda8698');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "boxplot = df2.boxplot(column=['Sales'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "s8zcl0sU3PTJ",
        "outputId": "9aee4fe1-64ef-4dac-e55f-230c78b080d1"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "ehV6QOyX3WOm",
        "outputId": "6958fae2-45bc-4224-bdb1-e039dcd353d2"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Sales\n",
              "count     21.000000\n",
              "mean    5170.523810\n",
              "std     3917.732707\n",
              "min      608.000000\n",
              "25%     1872.000000\n",
              "50%     4019.000000\n",
              "75%     8305.000000\n",
              "max    14138.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0a8e2c87-c1cc-470a-a965-f01c74c5ae96\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>21.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5170.523810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3917.732707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>608.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1872.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4019.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>8305.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>14138.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a8e2c87-c1cc-470a-a965-f01c74c5ae96')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0a8e2c87-c1cc-470a-a965-f01c74c5ae96 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0a8e2c87-c1cc-470a-a965-f01c74c5ae96');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Q_85 = np.quantile(df2['Sales'], 0.85)\n",
        "Q3 = np.quantile(df2['Sales'], 0.75)\n",
        "Q1 = np.quantile(df2['Sales'], 0.25)\n",
        "IQR = Q3 - Q1\n",
        "print(Q3)\n",
        "print(Q1)\n",
        "print(IQR)\n",
        "print(Q_85)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NEIGZkeJ3qxx",
        "outputId": "6bb685cc-09d5-416d-b9b8-447a2933e82a"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "8305.0\n",
            "1872.0\n",
            "6433.0\n",
            "8879.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lower_range = Q1 - 1.5 * IQR\n",
        "upper_range = Q3 + 1.5 * IQR\n",
        "print(lower_range)\n",
        "print(upper_range)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UEi4-zJN3yip",
        "outputId": "95c34697-2c6b-4015-ebb5-0c3bead85445"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-7777.5\n",
            "17954.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.loc[df2['State']=='Ohio', 'Sales'] = 41138\n",
        "lower_range = Q1 - 1.5 * IQR\n",
        "upper_range = Q3 + 1.5 * IQR\n",
        "print(lower_range)\n",
        "print(upper_range)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WeKe7pJAhRYn",
        "outputId": "32af7265-6f35-40d9-c51d-405b61ecf88a"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-7777.5\n",
            "17954.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.sort_values(\"Sales\")\n",
        "df2['Percentile'] = df2.Sales.rank(pct = True)\n",
        "df2.sort_values(\"Percentile\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 708
        },
        "id": "L2G09v5n4MZr",
        "outputId": "befc68c9-a806-49b7-88e6-85cab81855be"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             State  Sales  Percentile\n",
              "6        Kentucky     608    0.047619\n",
              "16      Tennessee     739    0.095238\n",
              "11    Mississippi    1356    0.142857\n",
              "1      California    1374    0.190476\n",
              "9   Massachusetts    1850    0.238095\n",
              "2        Colorado    1872    0.285714\n",
              "17          Texas    2127    0.333333\n",
              "4         Georgia    2459    0.380952\n",
              "10       Michigan    2818    0.428571\n",
              "18       Virginia    3653    0.476190\n",
              "14      Louisiana    4019    0.523810\n",
              "15       Oklahoma    4341    0.571429\n",
              "19     Washington    5794    0.619048\n",
              "8        Maryland    6452    0.666667\n",
              "13     New Jersey    7478    0.714286\n",
              "20  West Virginia    8305    0.761905\n",
              "0         Arizona    8408    0.809524\n",
              "3         Florida    8879    0.857143\n",
              "12       Missouri   10498    0.904762\n",
              "5          Kansas   11413    0.952381\n",
              "7             Ohio  41138    1.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-49aff59d-6948-4556-ad21-37a8459d144d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Percentile</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>608</td>\n",
              "      <td>0.047619</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>739</td>\n",
              "      <td>0.095238</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>1356</td>\n",
              "      <td>0.142857</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>California</td>\n",
              "      <td>1374</td>\n",
              "      <td>0.190476</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>1850</td>\n",
              "      <td>0.238095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>1872</td>\n",
              "      <td>0.285714</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Texas</td>\n",
              "      <td>2127</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>2459</td>\n",
              "      <td>0.380952</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>2818</td>\n",
              "      <td>0.428571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>3653</td>\n",
              "      <td>0.476190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>4019</td>\n",
              "      <td>0.523810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>4341</td>\n",
              "      <td>0.571429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Washington</td>\n",
              "      <td>5794</td>\n",
              "      <td>0.619048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>6452</td>\n",
              "      <td>0.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7478</td>\n",
              "      <td>0.714286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>8305</td>\n",
              "      <td>0.761905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>8408</td>\n",
              "      <td>0.809524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Florida</td>\n",
              "      <td>8879</td>\n",
              "      <td>0.857143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>10498</td>\n",
              "      <td>0.904762</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>11413</td>\n",
              "      <td>0.952381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>41138</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49aff59d-6948-4556-ad21-37a8459d144d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-49aff59d-6948-4556-ad21-37a8459d144d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-49aff59d-6948-4556-ad21-37a8459d144d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2.loc[(df2.Percentile > 0.619048)]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "uYsKDwc64USZ",
        "outputId": "c03fe252-7c56-41d4-96d9-310315e46882"
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             State  Sales  Percentile\n",
              "0         Arizona    8408    0.809524\n",
              "3         Florida    8879    0.857143\n",
              "5          Kansas   11413    0.952381\n",
              "7             Ohio  41138    1.000000\n",
              "8        Maryland    6452    0.666667\n",
              "12       Missouri   10498    0.904762\n",
              "13     New Jersey    7478    0.714286\n",
              "20  West Virginia    8305    0.761905"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0bec7720-87ae-46a1-a45d-137be4c8e32c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Percentile</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>8408</td>\n",
              "      <td>0.809524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Florida</td>\n",
              "      <td>8879</td>\n",
              "      <td>0.857143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>11413</td>\n",
              "      <td>0.952381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>41138</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>6452</td>\n",
              "      <td>0.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>10498</td>\n",
              "      <td>0.904762</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>7478</td>\n",
              "      <td>0.714286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>8305</td>\n",
              "      <td>0.761905</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bec7720-87ae-46a1-a45d-137be4c8e32c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0bec7720-87ae-46a1-a45d-137be4c8e32c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0bec7720-87ae-46a1-a45d-137be4c8e32c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "np.percentile(df2['Sales'],60)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "68kB2ohn4fRV",
        "outputId": "240a06b1-b5c5-4e1a-c80b-82fae3c30ed6"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5794.0"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#4\n",
        "df3 = ps.read_excel(path,sheet_name='Problem4')"
      ],
      "metadata": {
        "id": "gUzlWNP-4n71"
      },
      "execution_count": 83,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "kywtu-hq5Emi",
        "outputId": "6a7df3fd-61c6-4874-e342-9bb2cc2b0ea8"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Player A  Player B\n",
              "0         25         0\n",
              "1         40        25\n",
              "2         38        22\n",
              "3         48        38\n",
              "4         51        25\n",
              "5         35        45\n",
              "6        100        51\n",
              "7         25        60\n",
              "8         15        62\n",
              "9         20        93\n",
              "10        21        68\n",
              "11        25        63\n",
              "12        35        42\n",
              "13        40         9\n",
              "14         7         3\n",
              "15        12         5\n",
              "16        25        20\n",
              "17        40        14\n",
              "18        42        18\n",
              "19        56        37"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5b6c8379-dd3f-47d9-96e4-961b7036b913\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Player A</th>\n",
              "      <th>Player B</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>40</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>38</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>48</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>51</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>35</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>100</td>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>25</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>15</td>\n",
              "      <td>62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>20</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>21</td>\n",
              "      <td>68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>25</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>35</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>40</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>25</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>40</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>42</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>56</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b6c8379-dd3f-47d9-96e4-961b7036b913')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5b6c8379-dd3f-47d9-96e4-961b7036b913 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5b6c8379-dd3f-47d9-96e4-961b7036b913');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df3.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "rdQPR4aC5LdG",
        "outputId": "ee664622-856d-474c-cd9c-d91b0ab00012"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Player A   Player B\n",
              "count   20.000000  20.000000\n",
              "mean    35.000000  35.000000\n",
              "std     20.206825  25.296141\n",
              "min      7.000000   0.000000\n",
              "25%     24.000000  17.000000\n",
              "50%     35.000000  31.000000\n",
              "75%     40.500000  53.250000\n",
              "max    100.000000  93.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2d7a1199-0b0e-4b88-a883-b29dd02ddd1c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Player A</th>\n",
              "      <th>Player B</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>20.000000</td>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>35.000000</td>\n",
              "      <td>35.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>20.206825</td>\n",
              "      <td>25.296141</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>24.000000</td>\n",
              "      <td>17.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>35.000000</td>\n",
              "      <td>31.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>40.500000</td>\n",
              "      <td>53.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>100.000000</td>\n",
              "      <td>93.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d7a1199-0b0e-4b88-a883-b29dd02ddd1c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2d7a1199-0b0e-4b88-a883-b29dd02ddd1c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2d7a1199-0b0e-4b88-a883-b29dd02ddd1c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "std = df3[['Player A', 'Player B']].std()\n",
        "mean_value = df3[['Player A','Player B']].mean()\n",
        "print(\"The mean of runs scored\" \"\\n \",  df3[['Player A','Player B']].mean())\n",
        "print(\"The Std.Dev of both players are\" \"\\n \", df3[['Player A', 'Player B']].std())\n",
        "coeff = std/mean_value\n",
        "print (\"The Co.eff of variation of both players are\" \"\\n \",coeff)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XkFMeRC85SSi",
        "outputId": "9575e5e6-f9b5-4283-e394-aeff8fdb2c63"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The mean of runs scored\n",
            "  Player A    35.0\n",
            "Player B    35.0\n",
            "dtype: float64\n",
            "The Std.Dev of both players are\n",
            "  Player A    20.206825\n",
            "Player B    25.296141\n",
            "dtype: float64\n",
            "The Co.eff of variation of both players are\n",
            "  Player A    0.577338\n",
            "Player B    0.722747\n",
            "dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4 = ps.read_excel(path,sheet_name='Problem4')"
      ],
      "metadata": {
        "id": "OIIHuUTh578w"
      },
      "execution_count": 86,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "IQeXaJdYa99t",
        "outputId": "b99148c8-231c-4ee9-9ae6-33df1f36235d"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Player A  Player B\n",
              "0         25         0\n",
              "1         40        25\n",
              "2         38        22\n",
              "3         48        38\n",
              "4         51        25\n",
              "5         35        45\n",
              "6        100        51\n",
              "7         25        60\n",
              "8         15        62\n",
              "9         20        93\n",
              "10        21        68\n",
              "11        25        63\n",
              "12        35        42\n",
              "13        40         9\n",
              "14         7         3\n",
              "15        12         5\n",
              "16        25        20\n",
              "17        40        14\n",
              "18        42        18\n",
              "19        56        37"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96c52f60-30f7-4829-958e-d6415dbcf1de\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Player A</th>\n",
              "      <th>Player B</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>40</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>38</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>48</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>51</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>35</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>100</td>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>25</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>15</td>\n",
              "      <td>62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>20</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>21</td>\n",
              "      <td>68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>25</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>35</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>40</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>25</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>40</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>42</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>56</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96c52f60-30f7-4829-958e-d6415dbcf1de')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-96c52f60-30f7-4829-958e-d6415dbcf1de button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-96c52f60-30f7-4829-958e-d6415dbcf1de');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sample=np.zeros(10)\n",
        "for i in range(10):\n",
        "    sample_PlayerA=df4['Player A'].sample(n = 7)\n",
        "    sample[i]=sample_PlayerA.mean()\n",
        "print(sample)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fcMHbk2JbCCM",
        "outputId": "3b852f36-379f-492c-b9bb-8732395603ce"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[38.14285714 38.57142857 32.         29.42857143 40.42857143 42.85714286\n",
            " 33.         32.         42.14285714 32.28571429]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "dhMTblj6bCDM"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}